name: 'Auto Versioning'
on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.1.1
      with:
        fetch-depth: 0

    - name: Get latest tag and commit msg
      id: Tag_and_msg
      run: |
        PREFIX='v'
        VERSION_NUM='[0-999]'
        LATEST_TAG=$(git tag --list "${PREFIX}${VERSION_NUM}\.${VERSION_NUM}\.${VERSION_NUM}" --sort=-version:refname | head -n 1)
        if [ -z "$LATEST_TAG" ]; then
          LATEST_TAG="0.0.0"
        fi
        LATEST_TAG=${LATEST_TAG#$PREFIX}
        COMMIT_MSG=$(git log --format=%B -n 1)
        echo COMMIT_MSG=$(printf '%s\n' "$COMMIT_MSG") >> $GITHUB_ENV
        echo LATEST_TAG=$LATEST_TAG >> $GITHUB_ENV

    - name: New tag minor
      id: new_tag_minor
      if: (startsWith(github.ref, 'refs/heads/feat') || contains(env.COMMIT_MSG, 'bugfix')) == false
      run: |
        NEW_TAG=$(echo $LATEST_TAG | awk -F. '{$2 = $2 + 1; $3 = 0;} 1' OFS=.)
        echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

    - name: New tag patch
      id: new_tag_patch
      if: startsWith(github.ref, 'refs/heads/feat') || contains(env.COMMIT_MSG, 'bugfix')
      run: |
        NEW_TAG=$(echo $LATEST_TAG | awk -F. '{$3 = $3 + 1;} 1' OFS=.)
        echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

    - name: Push Git Tag
      run: |
        NEW_TAG=${{ env.NEW_TAG }}
        NEW_TAG="v$NEW_TAG"
        git tag $NEW_TAG
        git push origin $NEW_TAG
        